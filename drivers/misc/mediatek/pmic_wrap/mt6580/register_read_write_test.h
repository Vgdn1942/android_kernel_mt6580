#ifndef REG_TEST_H
#define REG_TEST_H

#include <mach/mt_typedefs.h>
#include "pwrap_hal.h"

enum pwrap_reg_attr {
	REG_TYPE_RW,
	REG_TYPE_RO,
	REG_TYPE_WO,
	REG_TYPE_RC,
	REG_TYPE_RU,
};

/* {offset, default value, mask, type} */
U32 mt6580_pwrap_reg_table[][4] = {
    {  0x0, 0x00000000, 0x00000001, REG_TYPE_RW},
    {  0x4, 0x00000000, 0x00000001, REG_TYPE_RW},
    {  0x8, 0x00000000, 0x00000001, REG_TYPE_RW},
    {  0xC, 0x00000000, 0x00000003, REG_TYPE_RW},
    { 0x10, 0x00000000, 0x00000001, REG_TYPE_RW},
    { 0x14, 0x00000001, 0x00000001, REG_TYPE_RW},
    { 0x18, 0x00000008, 0x0000000F, REG_TYPE_RW},
    { 0x1C, 0x00000001, 0x00000007, REG_TYPE_RW},
    { 0x20, 0x0000000F, 0x0000000F, REG_TYPE_RW},
    { 0x24, 0x0000000F, 0x0000000F, REG_TYPE_RW},
    { 0x28, 0x0000000F, 0x0000000F, REG_TYPE_RW},
    { 0x2C, 0x0000000F, 0x0000000F, REG_TYPE_RW},
    { 0x30, 0x00000000, 0x0000000F, REG_TYPE_RW},
    { 0x34, 0x00000001, 0x000000FF, REG_TYPE_RW},
    { 0x38, 0x00000000, 0x00000001, REG_TYPE_WO},
    { 0x3C, 0x00000000, 0x000001FF, REG_TYPE_RU},
    { 0x40, 0x00000100, 0xFFFF87F3, REG_TYPE_RU},
    { 0x44, 0x00000280, 0x00007FFF, REG_TYPE_RU},
    { 0x48, 0x00000000, 0x00000001, REG_TYPE_RW},
    { 0x4C, 0x00000000, 0x0000007F, REG_TYPE_RW},
    { 0x50, 0x00000000, 0x0000007F, REG_TYPE_RW},
    { 0x54, 0x00000000, 0xFFFFFFFF, REG_TYPE_RU},
    { 0x58, 0x00400005, 0x00FFFFFF, REG_TYPE_RU},
    { 0x5C, 0x00000000, 0x00000001, REG_TYPE_RW},
    { 0x60, 0x00000000, 0x00003FFF, REG_TYPE_RW},
    { 0x64, 0x00000000, 0x00000FFF, REG_TYPE_RU},
    { 0x68, 0x00000000, 0x00000001, REG_TYPE_WO},
    { 0x6C, 0x00000000, 0x00000001, REG_TYPE_RW},
    { 0x70, 0x00000000, 0x00000001, REG_TYPE_RW},
    { 0x74, 0x00000000, 0xFFFFFFFF, REG_TYPE_RW},
    { 0x78, 0x00100000, 0x003FFFFF, REG_TYPE_RU},
    { 0x7C, 0x00000000, 0x00000001, REG_TYPE_WO},
    { 0x80, 0x00000000, 0x00000001, REG_TYPE_RW},
    { 0x84, 0x00000000, 0x00000001, REG_TYPE_RW},
    { 0x88, 0x00000000, 0xFFFFFFFF, REG_TYPE_RW},
    { 0x8C, 0x00100000, 0x003FFFFF, REG_TYPE_RU},
    { 0x90, 0x00000000, 0x00000001, REG_TYPE_WO},
    { 0x94, 0x00000000, 0x00000001, REG_TYPE_RW},
    { 0x98, 0x00000000, 0x00000001, REG_TYPE_RW},
    { 0x9C, 0x00000000, 0xFFFFFFFF, REG_TYPE_RW},
    { 0xA0, 0x00100000, 0x003FFFFF, REG_TYPE_RU},
    { 0xA4, 0x00000000, 0x00000001, REG_TYPE_WO},
    { 0xA8, 0x00000000, 0x00000000, REG_TYPE_RW},
    { 0xAC, 0x00000000, 0x00000000, REG_TYPE_RU},
    { 0xB0, 0x00000000, 0x00000000, REG_TYPE_RU},
    { 0xB4, 0x00000000, 0x00000000, REG_TYPE_WO},
    { 0xB8, 0x0000BC0A, 0x0000FFFF, REG_TYPE_RW},
    { 0xBC, 0x00000000, 0x00000001, REG_TYPE_RW},
    { 0xC0, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    { 0xC4, 0x00000000, 0x00000000, REG_TYPE_RU},
    { 0xC8, 0x00000000, 0x00000001, REG_TYPE_RW},
    { 0xCC, 0x00000000, 0x00000001, REG_TYPE_RW},
    { 0xD0, 0x00000000, 0x1FFFFFFF, REG_TYPE_RU},
    { 0xD4, 0x00000000, 0x0000000F, REG_TYPE_RW},
    { 0xD8, 0x00000000, 0x00000000, REG_TYPE_RW},
    { 0xDC, 0x00000000, 0x00000000, REG_TYPE_RU},
    { 0xE0, 0x00000000, 0x00000007, REG_TYPE_RW},
    { 0xE4, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    { 0xE8, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    { 0xEC, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    { 0xF0, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    { 0xF4, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    { 0xF8, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    { 0xFC, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    {0x100, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    {0x104, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    {0x108, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    {0x10C, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    {0x110, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    {0x114, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    {0x118, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    {0x11C, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    {0x120, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    {0x124, 0x00000000, 0x00000003, REG_TYPE_RW},
    {0x128, 0x00000000, 0x00000003, REG_TYPE_RW},
    {0x12C, 0x00000000, 0x00000001, REG_TYPE_RW},
    {0x130, 0x00000000, 0x00000001, REG_TYPE_RU},
    {0x134, 0x00000000, 0x00000001, REG_TYPE_RW},
    {0x138, 0x00000000, 0x00000001, REG_TYPE_RW},
    {0x13C, 0x00000000, 0x00000001, REG_TYPE_RW},
    {0x140, 0x00000000, 0x000000FF, REG_TYPE_RW},
    {0x144, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    {0x148, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    {0x14C, 0x00000002, 0x0000FFFF, REG_TYPE_RW},
    {0x150, 0x00000004, 0x0000FFFF, REG_TYPE_RW},
    {0x154, 0x00000008, 0x0000FFFF, REG_TYPE_RW},
    {0x180, 0x00000000, 0x00000001, REG_TYPE_RW},
    {0x190, 0x00000000, 0xFFFFFFFF, REG_TYPE_RW},
};


/* {offset, default value, mask, type} */
U32 DEW_reg_tbl[][4] = {
    { 0x0, 0x00000000, 0x00000001, REG_TYPE_RW},
    { 0x2, 0x00000000, 0x00000001, REG_TYPE_RW},
    { 0x4, 0x0000FFFF, 0x0000FFFF, REG_TYPE_RW},
    { 0x6, 0x00000000, 0x0000FFFF, REG_TYPE_RO},
    { 0x8, 0x00000000, 0x0000FFFF, REG_TYPE_RC},
    { 0xA, 0x00005AA5, 0x0000FFFF, REG_TYPE_RO},
    { 0xC, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    { 0xE, 0x00000000, 0x00000001, REG_TYPE_RW},
    {0x10, 0x00000083, 0x000000FF, REG_TYPE_RO},
    {0x12, 0x00000000, 0x0000000F, REG_TYPE_RW},
    {0x14, 0x00000000, 0x0000000F, REG_TYPE_RW},
    {0x16, 0x00000000, 0x00000001, REG_TYPE_WO},
    {0x18, 0x00000000, 0x00000003, REG_TYPE_RW},
    {0x1A, 0x00000000, 0x00000003, REG_TYPE_RW},
    {0x1C, 0x00000000, 0x00000001, REG_TYPE_WO},
    {0x1E, 0x00000000, 0x00000001, REG_TYPE_RW},
    {0x20, 0x00000000, 0x00000001, REG_TYPE_RO},
    {0x22, 0x00000000, 0x00000001, REG_TYPE_RW},
    {0x24, 0x00000000, 0x00000001, REG_TYPE_RW},
    {0x26, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    {0x28, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    {0x2A, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    {0x2C, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    {0x2E, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    {0x30, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
    {0x34, 0x00000000, 0x0000FFFF, REG_TYPE_RW},
};

#endif /* REG_TEST_H */
